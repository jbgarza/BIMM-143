---
title: "Class 9: Halloween Candy Mini-Project"
author: "James Garza (PID: A16300772)"
format: pdf
---

Here we analyze a candy dataset from the 538 website. This is a CSV file from their GitHub repository.

## Data Import

```{r}
read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/candy-power-ranking/candy-data.csv")
```

```{r}
candy_file <- "candy-data.csv"

candy <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/candy-power-ranking/candy-data.csv", row.names=1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

There are 85 different types of candy in the dataset
```{r}
row(candy)
```



> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```
There are 38 fruit candy

```{r}
sum(candy$chocolate)
```


## Data Exploration


## What is your favorite candy?

> Q3. What is your favorite candy in the dataset and what is it;s winpercent value?

```{r}
candy["Reese's Peanut Butter cup",]$winpercent
```

> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat",]$winpercent
```


> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```

> Q What is the least liked candy in the dataset? - lowest winpercent

```{r}
x <- c(5, 3, 4, 1)
sort(x) # gives the values in ascending order
order(x) # indicates the index location
```
```{r}
inds <- order(candy$winpercent)
head(candy[inds,])
```
Nik L Nip has the lowest win percentage and is the least liked candy.


```{r}
# install.packages("skimr")
library("skimr")
skim(candy)
```


> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

Yes, row 12 (winpercent) appears to be on a percentage scale rather than a scale of 0 to 1.  Additionally it is the only variable that has STDEV above 1.

> Q7. What do you think a zero and one represent for the candy$chocolate column?

```{r}
candy$chocolate
```

I think a zero and 1 represent "True/False" for the respective categories that they are being counted in where a 1 means true and a 0 means false.

> Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent, breaks=8)
```
```{r}
library(ggplot2)
ggplot(candy) + aes(winpercent) + geom_histogram(binwidth=5)
```


> Q9. Is the distribution of winpercent values symmetrical?

No as it appears to be slightly skewed to the right.

> Q10. Is the center of the distribution above or below 50%?

The center is below 50%.

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
mean(candy$winpercent[as.logical(candy$chocolate)])
mean(candy$winpercent[as.logical(candy$fruity)])
```
On average chocolate candy is ranked higher than fruity candy.

> Q12. Is this difference statistically significant?

```{r}
t.test(candy$winpercent[as.logical(candy$chocolate)], candy$winpercent[as.logical(candy$fruity)])
```
The difference is statistically significant because the p-value is less than 0.05.

## Overall Candy Rankings

> Q13. What are the five least liked candy types in this set?

```{r}
head(candy[inds,], 5)
```
Nik L Nip, boston baked beans chiclets super bubble and jawbusters are the 5 least liked candies.

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
tail(candy[inds,], 5)
```
The 5 most liked candies are Snickers, Kit Kat, Twix, Reese's Minatures and Reese's Peanut Butter cups.

> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy) + 
  aes(x = winpercent, y = rownames(candy)) +
  geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
ggplot(candy) + 
  aes(x = winpercent, reorder(rownames(candy),winpercent)) +
  geom_col()
```
Add some color to our ggplot. We need to make a custom color vector. 
```{r}
# start with all black vector of colors

my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "yellow"
my_cols[as.logical(candy$bar)] = "red"
my_cols[as.logical(candy$fruity)] = "blue"
```
```{r}
ggplot(candy) + 
  aes(x = winpercent, 
      reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) + 
  ylab("Candy Name") + xlab("Win Percent") 

 # ggsave('barplot1.png', width=7, height=10)
```

![](barplot1.png)
You can insert any image using this markdown syntax.

![](https://img.freepik.com/free-vector/science-biology-scribbles_23-2147501586.jpg?size=338&ext=jpg&ga=GA1.1.1448711260.1707177600&semt=sph)


Now, for the first time, using this plot we can answer questions like:

> Q17. What is the worst ranked chocolate candy?

Sixlets

> Q18. What is the best ranked fruity candy?

Starbursts

## Taking a look at pricepercent

```{r}
# install.packages("ggrepel")
library(ggrepel)
```
```{r}
candy$pricepercent
```
If we want to see what is a good candy to buy in terms of winpercent and pricepercent we can plot these 2 variables and then see the best candy for the least amount of money

```{r}
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text()
```
to avoid the overplotting of all these labels we can use an add on package called ggrepl

```{r}
# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel()
```

Play with the max.overlaps parameter to `geom_text_repel()`
```{r}
# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, max.overlaps = 5)
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reese's minatures offers the highest win percent while offering a low price percent.

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
inds_2 <- order(candy$pricepercent)
tail(candy[inds_2,], 5)
```

The 5 most expensive candies are nestle smarties, Nik L Nip, Ring pop, Mr Good Bar and hershey's special dark. The least popular is Nik L Nip.

> Q21. Make a barplot again with geom_col() this time using pricepercent and then improve this step by step, first ordering the x-axis by value and finally making a so called “dot chat” or “lollipop” chart by swapping geom_col() for geom_point() + geom_segment().

```{r}
# Make a lollipop chart of pricepercent
ggplot(candy) +
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_segment(aes(yend = reorder(rownames(candy), pricepercent), 
                   xend = 0), col="gray40") +
    geom_point()
```



## Exploring the correlation structure

```{r}
# install.packages("corrplot")
library(corrplot)
```
```{r}
cij <- cor(candy)
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

two variables that are anti-correlated are fruity and chocolate

> Q23. Similarly, what two variables are most positively correlated?

chocolate and win percent are the most positively correlated variables


## Principal Componenet Analysis

The main function for this is called `prcomp()` and here we know we need to scale our data with the `scale=TRUE` argument.

```{r}
pca <- prcomp(candy, scale = TRUE)
summary(pca)
```

```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```

```{r}
p + geom_text_repel(col=my_cols, max.overlaps = 8)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (red), chocolate other (yellow), fruity (blue), other (black)",
       caption="Data from 538")
```

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

## loadings plot
```{r}
loadings <- as.data.frame(pca$rotation)
ggplot(loadings) +
  aes(PC1, reorder(rownames(loadings), PC1)) +
  geom_col()
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

The three variables that are picked up by PC1 in the positive direction are fruity hard and pluribus.  This makes sense as it lines up with the data (from the correlation matrix) we saw in addition to my own experiences.



















